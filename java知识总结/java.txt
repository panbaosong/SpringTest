面向对象的原则是什么？
	开闭原则：对扩展开放，对修改关闭；
	单一职责原则：一个对象只包含一种值则，高内聚，低耦合；
	里氏替换原则：引用基类的地方必须能透明地使用器子类的对象，可以用子类对象替换父类对象。
	依赖倒转原则：高层模块不应该依赖底层模块，他们都应该依赖抽象
	接口隔离原则：在使用接口隔离原则的时候。需要注意控制接口的粒度，
	接口不能太小，如果太小会导致系统中接口泛滥，不利于维护。接口也不能太大，太大的接口将违背接口隔离原则，灵活性较差，使用起来不方便
	合成服用原则：优先使用对象组合，而不是继承来达到复用的目的，
	迪米特法则：又称最少知识原则，每一个软件单位对其他的单位都只有最少的知识，而且局限于那些与本单位密切相关的软件单位。
怎么理解什么是同步？
	同步请求：A发出请求之后，B请求要等待A请求处理完之后才能执行下一步操作
	异步请求：A发出请求之后，B请求无需等待A请求处理完就可以执行下一步操作	
什么是序列化和反序列化？
	序列化，将内存中的对象（整体）转换成二进制格式的数据存储起来，存储到文件中。。
	反序列化：将已经存储到文件中的二进制的数据转换对象读到内存中。	
简单介绍一下JVM的是如何工作的？
	1.首先编写java源文件，
	2.之后编译成class（字节码）文件
	3.jvm进行加载。（就是类加载器：classLoader）
	4.开始解释执行
	5.交给操作系统转换成机械码交给硬件
MVC工作原理
	MVC是一个设计模式，它强制性的使应用程序的输入、处理和输出分开。使用MVC应用程序被分成三个核心部件：模型、视图、控制器。它们各自处理自己的任务。
事务的四大特性是什么？
	原子性：要不执行的操作成功，要么全部不执行。
	一致性：事务的执行使数据从一个状态转换为另一个状态，但对整个数据的完整性保持稳定
	隔离性：隔离性是多个用户并发访问数据库时，比如操作同一个表时，数据库为每一个用户开启事务，不被其他事务的操作所干扰，多个并发事务直接要相互隔离。
	持久性：当事务正确完成后，要把对于他的数据改变成永久性的。
类的加载机制
		类的加载机制是指将类的.class文件中的二进制数据读到内存中，
		将其放在运行时数据区的方法区内，然后在java堆区创建一个对象	
		用来封装在方法区内的数据结构。类的加载的最终产品时位于堆区的
		Calls对象，Class对象封装了类在方法区内的数据结构。并且向java程序源提供了访问方法区内的数据结构的接口类的加载过程分为五个步骤，加载，验证，准备，解析，初始化
什么是面向对象
	封装（抽象） 继承 多态
面向对象的特点
	是绑定			
DDL与DML的区别
	DML(Data Manipulation Language)数据操纵语言：
	适用范围：对数据库中的数据进行一些简单操作，如insert,delete,update,select等.
	DDL(Data Definition Language)数据定义语言：
	适用范围：对数据库中的某些对象(例如，database,table)进行管理，如Create,Alter和Drop.	
什么是类？
	类就是具备某些共同特征的实体的集合，它是一种抽象的数据类型，他是对所具有相同特征实体的抽象。
string类的常用方法：
	1   indexOf：indexof 返回指定字符的位置
	2   charAt：chatAt返回字符串中指定位置的字符
	3   replace：替换字符串
	4   trim：字符串两端空白
	5   split：分割字符串
	6   getBytes：返回byte类型数组
	7   length：长度
	8   toLowerCase：小写转换
	9   toUpperCase：大写转换
	10  substring：字符串比较
	11  equals：字符串比较		
普通类和抽象类的区别
	1.普通类不可有抽象方法，抽象类里可以有非抽象方法，接口里面必须是抽象方法
	2.抽象类不可直接被实例化，普通类因为没有抽象方法所以可以直接被实例化
抽象类可以被fianl修饰吗？
	不能，抽象类是让被其他类继承，final修饰的类不能被继承，彼此矛盾	
接口和抽象类有什么区别？
	1、抽象类和接口都不能直接实例化，如果要实例化，抽象类变量必须指向实现所有抽象方法的子类对象，接口变量必须指向实现所有接口方法的类对象。

	2、抽象类要被子类继承，接口要被类实现。

	3、接口只能做方法申明，抽象类中可以做方法申明，也可以做方法实现

	4、接口里定义的变量只能是公共的静态的常量，抽象类中的变量是普通变量。

	5、抽象类里的抽象方法必须全部被子类所实现，如果子类不能全部实现父类抽象方法，那么该子类只能是抽象类。同样，一个实现接口的时候，如不能全部实现接口方法，那么该类也只能为抽象类。

	6、抽象方法只能申明，不能实现，接口是设计的结果 ，抽象类是重构的结果

	7、抽象类里可以没有抽象方法

	8、如果一个类里有抽象方法，那么这个类只能是抽象类
	9、抽象方法要被实现，所以不能是静态的，也不能是私有的。

	10、接口可继承接口，并可多继承接口，但类只能单根继承。
补充：
	1.main方法，抽象类可以有mian方法，并且可以运行，接口中没有main方法；

	2.构造方法，抽象类中可以有构造函数，接口中没有；

	3.实现，接口只能被实现，抽象类只能被继承；

	4.实现数量，类可以实现多个接口，只能继承一个抽象类；

	5.访问修饰符，接口中的方法默认public修饰，抽象类中的方法可以是任意修饰符

	6.接口里定义的变量只能是公共的静态的常量，抽象类中的变量是普通变量

	7.接口只能做方法申明，抽象类中可以做方法申明，也可以做方法实现
JAVA中的容器有哪些？
	Collection   
	List 
	Queen 
	set
	Map   HashMap  TreeMap		
HashMap和HashTable的区别
	1.HashTable  线程安全，HashMap线程不安全

	2.HashTable是同步的，HashMap是非同步的，效率比HashTable高

	3.HashMap允许空键值，HashTable不允许

	4.父类不同：Hashtable的父类是Dictionary，HashMap的父类是AbstractMap

	hashMap去掉了HashTable的contains方法，但是加上了containsValue（）和containsKey（）方法。	
