为什么要用 ES？
	应为在项目中的数据非常庞大，比如说在百万级的数据下，用以往的模糊查询效率会非常的底下，而且查询的数据不完全，所以用到了ES搜索引擎，
Elasticsearch是如何实现Master选举的？
		Elasticsearch的选主是ZenDiscovery模块负责的，主要包含Ping和Unicast这两部分；
		对所有可以成为master的节点根据nodeId字典排序，每次选举每个节点都把自己所知道节点排一次序，然后选出第一个节点，暂且认为它是master节点。	
		如果对某个节点的投票数达到一定的值并且该节点自己也选举自己，那这个节点就是master。否则重新选举一直到满足上述条件。
Elasticsearch中的节点（比如共20个），其中的10个选了一个master，另外10个选了另一个master，怎么办？
	当集群master候选数量不小于3个时，可以通过设置最少投票通过数量超过所有候选节点一半以上来解决脑裂问题；		
	当候选数量为两个时，只能修改为唯一的一个master候选，其他作为data节点，避免脑裂问题。
详细描述一下Elasticsearch更新和删除文档的过程。
	删除和更新也都是写操作，但是Elasticsearch中的文档是不可变的，因此不能被删除或者改动以展示其变更
	磁盘上的每个段都有一个相应的.del文件。当删除请求发送后，文档并没有真的被删除，而是在.del文件中被标记为删除。该文档依然能匹配查询，但是会在结果中被过滤掉。当段合并时，在.del文件中被标记为删除的文档将不会被写入新段。	
	在新的文档被创建时，Elasticsearch会为该文档指定一个版本号，当执行更新时，旧版本的文档在.del文件中被标记为删除，新版本的文档被索引到一个新段。旧版本的文档依然能匹配查询，但是会在结果中被过滤掉。
ES和lucene的区别是什么？
	lucene是现存功能最强大，最先进的搜索库，学习难度大，api大量java代码，
		1。只有一个索引库
		2.传统二点遍历搜索方式
		3.采用B+树索引；
	ES是基于lucene的，隐藏了lucene复杂部分的一个分布式全文检索框架
		1.一个es的集群包含多个索引库。
		2.分布式搜索。
		3.es是采用倒序排式索引。
		4.es没有事务概念，删除不能回复。
		5.es开源免费	
bulk一次最大处理多少数据量。
		默认的是不能超过100M，
		不过一般上建议是1000-5000个文档，如果文件很大，可以适当减少队列，大小就建议是5-15MB.
ES在高并发的情况下如何保证数据线程安全问题？
		在读数据与写数据之间如果又其他线程进行写操作，就会出现问题
		es使用版本控制才避免这种问题， 在修改数据的时候指定
		版本号，操作一次版本号加1.
ES基于什么？
	restAPI调试，数据报表，数据搜索。
ES是什么？
	ES是一个分布式使用restful风格的数据搜索引擎，
Solr和ES的区别
	Es基本就是开箱即用，非常简单，几乎不需要任何的配置，solr安装起来略微复杂一点点，
	solr使用的注册中心是zookeeper，但是es所使用的是自己研发的注册中心。
	solr支持了很多种的数据格式，（json,xml..等）
	solr官方提供了很大功能，。
	ES只专注查询，ES所提供的功能比较少，
	solr的查询效率非常高，但是索引的创建非常低，但是es的查询效率低，创建索引的效率比较高，
ES的三大核心是什么？
	index：相当于关系型数据库中的库
	type：相当于数据库中的表
	document：相当于关系型数据库中的表数据
		
