RPC框架是由什么组成的？
	客户端：服务调用方
	客户端存根：存放服务端地址信息，将客户端的请求参数数据信息打包成网络消息，再通过网络传输发送给服务端。
	服务端存根：接受客户端发送过来的请求消息并进行解包，然后在调用本地服务进行处理，
	服务端：服务的真正提供者。
	Network Service：底层传输，可以是TCP或者HTTP
常见 RPC 技术和框架有什么？
	应用级的服务框架：Dubbo/DubboX，Google gRPC，Spring Boot/Spring Cloud。
	远程通信协议：RMI ，Socket， SOAP（HTTP,XML）， REST（HTTP JSON）。
	通信框架：MINA和Netty
Dubbo是什么？
	是一款高性能，轻量级的开源java RPC框架，它提供了三大核心能力：
	Dubbo的三大核心是什么？
		面向接口的远程方法调用，
		智能容错和负载均衡、	
		服务自动注册和发现
Dubbo的特性有那些？
		面向接口的远程方法调用，
		智能容错和负载均衡、	
		服务自动注册和发现，
		运行期流量调度
		高度可扩展能力
		可视化的服务治理与运维
Dubbo都有那些角色？
	provider：暴露服务的服务提供方
	consumer：调用远程服务的服务消费方
	Registry：服务注册与发现的注册中心
	Monitor：统计服务的调用次数和调用时间的监控中心
	Container：服务运行容器
Dubbo调用关系
		1.服务容器启动，加载，运行服务提供者。
		2.服务提供者在启动的时候。向注册中心注册自己提供的服务
		3.服务消费者在启动的时候，向注册中心订阅自己所需要的服务。
		4.注册中心返回服务提供者地址列表和消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者。
		5.服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，在选择另一台调用
		6.服务消费者和提供者，在内存中累计调用车数和调用时间，定时每分钟发送一次统计数据到监控中心。
注册中心主要作用？
	1.动态加入,服务提供者通过注册中心动态的把自己暴露给消费者，无需消费者逐个更新配置文件。
	2.动态发现服务，消费者可以动态发现新的服务，无需重启生效。
	3.统一配置，避免本地配置导致每个服务配置不一致。
	4.动态调整，注册中心支持参数动态调整，新参数自动更新到所有相关的服务节点。
	5.统一管理，依靠注册中心数据，可以统一管理配置服务节点
在 Provider 上可以配置的 Consumer 端的属性有哪些？
	1.timeout：方法调用超时
	2.retries：失败重试次数，默认重试 2 次
	3.loadbalance：负载均衡算法，默认随机
	4.actives 消费者端，最大并发调用限制
Dubbo默认使用什么注册中心，还有别的选择吗？
	推荐使用 Zookeeper 作为注册中心，还有 Redis、Multicast、Simple 注册中心，但不推荐。
Dubbo有哪几种配置方式？
	1.Spring 配置方式
	2.Java API 配置方式	
Dubbo有哪几种负载均衡策略？默认的是哪一种？
	1.随机的（默认）按权重设置比率
	2.轮询	按权重设置比率
	3.最少活跃调用数
	4.一致性Hash	
Dubbo可以对结果进行缓存吗？
	可以，Dubbo 提供了声明式缓存，用于加速热门数据的访问速度，以减少用户加缓存的工作量。
Dubbo服务之间的调用是阻塞的吗？
	默认是同步等待结果阻塞的，支持异步调用。
Dubbo支持分布式事务吗？
	暂时不支持
Dubbo支持服务降级吗？
	Dubbo 2.2.0版本以上支持
服务提供者能实现失效踢出是什么原理？
	服务失效踢出基于 Zookeeper 的临时节点原理。
在使用过程中都遇到了些什么问题？
	Dubbo 的设计目的是为了满足高并发小数据量的 rpc 调用，在大数据量下的性能表现并不好
Zookeeper宕机的时候Dubbo可以连接吗？
	可以的，默认是有缓存的。
不使用Zk，Dubbo可以直接连接吗？
	可以的，直接设置调用服务者的IP地址和端口号就可以了							